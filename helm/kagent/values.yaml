# Default values for kagent

# ==============================================================================
# GLOBAL CONFIGURATION
# ==============================================================================

tag: ""


imagePullSecrets: []
imagePullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

# -- Override the namespace
# @default -- `.Release.Namespace`
namespaceOverride: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# ==============================================================================
# CORE KAGENT COMPONENTS
# ==============================================================================

controller:
  replicas: 1
  loglevel: "info"

  # -- Namespaces the controller should watch.
  # If empty, the controller will watch ONLY release namespace.
  # @default -- [] (watches release namespace)
  watchNamespaces: []
  #  - watch-ns-1
  #  - watch-ns-2

  image:
    registry: cr.kagent.dev
    repository: kagent-dev/kagent/controller
    tag: "" # Will default to global, then Chart version
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi
  service:
    type: ClusterIP
    ports:
      port: 8083
      targetPort: 8083
  config: {} # Additional configuration key-value pairs for the controller ConfigMap
  database:
    type: sqlite
    sqlite:
      databaseName: kagent.db
    postgres:
      url: postgres://postgres:kagent@pgsql-postgresql.kagent.svc.cluster.local:5432/postgres

engine:
  replicas: 1
  image:
    registry: cr.kagent.dev
    repository: kagent-dev/kagent/app
    tag: "" # Will default to global, then Chart version
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  service:
    type: ClusterIP
    ports:
      port: 8081
      targetPort: 8081
  config: {} # Additional configuration key-value pairs for the engine ConfigMap

ui:
  replicas: 1
  image:
    registry: cr.kagent.dev
    repository: kagent-dev/kagent/ui
    tag: "" # Will default to global, then Chart version
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  service:
    type: ClusterIP
    ports:
      port: 80
      targetPort: 8080
  config: {} # Additional configuration key-value pairs for the ui ConfigMap

# ==============================================================================
# LLM PROVIDERS CONFIGURATION
# ==============================================================================
# https://kagent.dev/docs/getting-started/configuring-providers

providers:
  default: openAI
  openAI:
    provider: OpenAI
    model: "gpt-4.1-mini"
    apiKeySecretRef: kagent-openai
    apiKeySecretKey: OPENAI_API_KEY
    apiKey: ""
  ollama:
    provider: Ollama
    model: "llama3.2"
    config:
      host: host.docker.internal:11434
  anthropic:
    provider: Anthropic
    model: "claude-3-sonnet-20240229"
    apiKeySecretRef: kagent-anthropic
    apiKeySecretKey: ANTHROPIC_API_KEY
    apiKey: ""
  azureOpenAI:
    provider: AzureOpenAI
    model: "gpt-4.1-mini"
    apiKeySecretRef: kagent-azure-openai
    apiKeySecretKey: AZUREOPENAI_API_KEY
    apiKey: ""
    config:
      apiVersion: "2023-05-15"
      azureAdToken: ""
      azureDeployment: ""
      azureEndpoint: ""

# ==============================================================================
# BUILT-IN TOOLS
# ==============================================================================

tool-server:
  enabled: true
  replicas: 1
  openai:
    apiKey: ""
  loglevel: "debug"
  config: {}

# ==============================================================================
# AGENTS
# ==============================================================================

agents:
  k8s-agent:
    enabled: true
  kgateway-agent:
    enabled: true
  istio-agent:
    enabled: true
  promql-agent:
    enabled: true
  observability-agent:
    enabled: true
  argo-rollouts-agent:
    enabled: true
  helm-agent:
    enabled: true
  cilium-policy-agent:
    enabled: true
  cilium-manager-agent:
    enabled: true
  cilium-debug-agent:
    enabled: true

# ==============================================================================
# EXTERNAL MCP SERVERS
# ==============================================================================

external-mcp:
  querydoc:
    enabled: true
    replicas: 1
    image:
      registry: ghcr.io
      repository: kagent-dev/doc2vec/mcp
      tag: 1.1.8
      pullPolicy: IfNotPresent
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 512Mi
    openai:
      apiKey: ""
  mcp-grafana:
    enabled: false
    replicas: 1
    image:
      registry: docker.io
      repository: mcp/grafana
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 512Mi
    connection:
      url: "http://grafana.kagent.svc.cluster.local:3000"
      apiKey: ""

# ==============================================================================
# OBSERVABILITY
# ==============================================================================

otel:
  tracing:
    enabled: false
    exporter:
      otlp:
        endpoint: http://host.docker.internal:4317
        timeout: 15
        insecure: true
